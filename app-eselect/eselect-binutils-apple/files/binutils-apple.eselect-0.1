# Copyright 1999-2019 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

DESCRIPTION="Manage installed versions of sys-devel/binutils-apple"
MAINTAINER="alex@1stleg.com"
VERSION="0.1"

# find a list of binutils-apple symlink targets
find_targets() {
    local v h
    for v in "${EROOT}"/usr/lib/binutils-apple/*; do
        if [[ -d ${v} ]] ; then
            for h in "${v}"/bin/*-*-*-clang ]; do
                [ -f "${h}" ] && echo $(basename "${h%-clang}")-$(basename "${v}")
            done
        fi
    done
}

# remove the binutils-apple symlinks
remove_symlinks() {
    local target=$1

    local t
    for t in "${EROOT}"/usr/bin/${target%-*}-*; do
        [[ -L ${t} ]] && rm "${t}"
    done
}

# set the binutils-apple symlinks
set_symlinks() {
    local target=$1

    local t
    for t in "${EROOT}"/usr/lib/binutils-apple/${target##*-}/bin/${target%-*}-*; do
        [[ -f ${t} ]] && ln -s "${t}" "${EROOT}"/usr/bin
    done
}

### list action ###

describe_list() {
    echo "List available binutils-apple versions"
}

do_list() {
    local i targets=( $(find_targets) )

    write_list_start "Available binutils-apple versions:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        # highlight the target where the symlink is pointing to
        [[ -L "${EROOT}"/usr/bin/${targets[i]%-*}-clang ]] \
            && targets[i]=$(highlight_marker "${targets[i]}")
    done
    write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action ###

describe_set() {
    echo "Set a new binutils-apple symlink target"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
    [[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
    [[ $# -gt 1 ]] && die -q "Too many parameters"
    
    # we have something strange
    [[ -e /usr/bin/${target%-*}-clang ]] && die -q "/usr/bin/${target%-*}-clang exists but is not a symlink"


    local target="$1"
    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    [[ -z ${target} || ! -f ${EROOT}/usr/lib/binutils-apple/${target##*-}/bin/${target%-*}-clang ]] \
        && die -q "Target \"$1\" doesn't appear to be valid!"


    # existing symlink
    [[ -L "${EROOT}"/usr/bin/${target%-*}-clang ]] \
		&& remove_symlinks "${target}" \
		|| die -q "Couldn't remove existing symlink"
    
    set_symlinks "${target}" || die -q "Couldn't set a new symlink"
}


### set action ###

describe_set() {
    echo "Set a new binutils-apple symlink target"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
    [[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
    [[ $# -gt 1 ]] && die -q "Too many parameters"
    
    # we have something strange
    [[ -e /usr/bin/${target%-*}-clang ]] && die -q "/usr/bin/${target%-*}-clang exists but is not a symlink"


    local target="$1"
    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    [[ -z ${target} || ! -f ${EROOT}/usr/lib/binutils-apple/${target##*-}/bin/${target%-*}-clang ]] \
        && die -q "Target \"$1\" doesn't appear to be valid!"

    # existing symlink
    if [[ ! -L "${EROOT}"/usr/bin/${target%-*}-clang ]] ; then
		set_symlinks "${target}" || die -q "Couldn't set a new symlink"
	fi
}

### unset action ###

describe_unset() {
    echo "Unset an existing binutils-apple symlink target"
}

describe_unset_parameters() {
    echo "<target>"
}

describe_unset_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_unset() {
    [[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
    [[ $# -gt 1 ]] && die -q "Too many parameters"
    
    # we have something strange
    [[ -e /usr/bin/${target%-*}-clang ]] && die -q "/usr/bin/${target%-*}-clang exists but is not a symlink"


    local target="$1"
    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    [[ -z ${target} || ! -f ${EROOT}/usr/lib/binutils-apple/${target##*-}/bin/${target%-*}-clang ]] \
        && die -q "Target \"$1\" doesn't appear to be valid!"


    # existing symlink
    [[ -L "${EROOT}"/usr/bin/${target%-*}-clang ]] \
		&& remove_symlinks "${target}" \
		|| die -q "Couldn't remove existing symlink"
}
